//---------------------------------------------------------------------------

#pragma hdrstop

#include "Functions.h"

void sortByPressure(vector<CPatient> & vec, int left, int right)
{
	int i = left, j = right;
	CPatient tmp;
	int pivot = vec[(left + right) / 2].getPressure();


	while (i <= j)
	{
		while (vec[i].getPressure() < pivot)
			i++;
		while (vec[j].getPressure() > pivot)
			j--;
		if (i <= j) {
				tmp = vec[i];
				vec[i] = vec[j];
				vec[j] = tmp;

			i++;
			j--;
		}
	};

	//рекурсія
	if (left < j)
		sortByPressure(vec, left, j);
	if (i < right)
		sortByPressure(vec, i, right);
}

void sortByPulse(vector<CPatient> & vec, int left, int right)
{
	int i = left, j = right;
	CPatient tmp;
	int pivot = vec[(left + right) / 2].getPulse();

	while (i <= j)
	{
		while (vec[i].getPulse() < pivot)
			i++;
		while (vec[j].getPulse() > pivot)
			j--;
		if (i <= j) {
				tmp = vec[i];
				vec[i] = vec[j];
				vec[j] = tmp;

			i++;
			j--;
		}
	};

	//рекурсія
	if (left < j)
		sortByPulse(vec, left, j);
	if (i < right)
		sortByPulse(vec, i, right);
}
//---------------------------------------------------------------------------
#pragma package(smart_init)
